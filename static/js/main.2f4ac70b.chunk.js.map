{"version":3,"sources":["App.js","index.js"],"names":["App","useState","topText","setTopText","bottomText","setBottomText","templates","setTemplates","selectedId","setSelectedId","meme","setMeme","useEffect","fetch","then","resp","json","data","memes","handleChange","e","fieldName","target","name","fieldValue","value","onSubmit","preventDefault","params","template_id","text0","text1","username","password","qs","stringify","success","url","type","onChange","className","src","alt","map","elem","id","onClick","imageId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAoFeA,MAhFf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,OAGqBJ,mBAAS,IAH9B,mBAGNK,EAHM,KAGKC,EAHL,OAIuBN,mBAAS,MAJhC,mBAINO,EAJM,KAIMC,EAJN,OAKWR,mBAAS,MALpB,mBAKNS,EALM,KAKAC,EALA,KAObC,qBAAU,WACRC,MAAM,qCACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GAAI,OAAIT,EAAaS,EAAKC,KAAKC,YACpC,IAEH,IAAMC,EAAe,SAAAC,GACnB,IAAMC,EAAYD,EAAEE,OAAOC,KACrBC,EAAaJ,EAAEE,OAAOG,MAEV,QAAdJ,EACFlB,EAAWqB,GAEXnB,EAAcmB,IA0BlB,OACE,gCACE,uBAAME,SApBW,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,EAAS,CACbC,YAAarB,EACbsB,MAAO5B,EACP6B,MAAO3B,EACP4B,SAAU,WACVC,SAAU,sBAEZpB,MAAM,yCAAD,OAA0CqB,IAAGC,UAAUP,KAC3Dd,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GACAA,EAAKoB,SACPzB,EAAQK,EAAKC,KAAKoB,SAOpB,UACE,uBACEC,KAAK,OACLf,KAAK,MACLE,MAAOvB,EACPqC,SAAUpB,IAEZ,uBACEmB,KAAK,OACLf,KAAK,SACLE,MAAOrB,EACPmC,SAAUpB,IAEZ,uBAAOmB,KAAK,SAASb,MAAM,qBAE7B,qBAAKe,UAAU,OAAf,SACG9B,EAAO,qBAAK+B,IAAK/B,EAAMgC,IAAI,KAAQ,OAEtC,qBAAKF,UAAU,iBAAf,SACGlC,GACCA,EAAUqC,KAAI,SAAAC,GAAI,OAAI,qBAEEC,GAAID,EAAKC,GACTC,QAAS,kBA/CrBC,EA+CuCH,EAAKC,QA9C9DpC,EAAcsC,GADI,IAAAA,GAgDYN,IAAKG,EAAKP,IACVK,IAAI,IAJCE,EAAKC,aCpE5CG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f4ac70b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport qs from \"qs\";\nimport './App.css';\n\nfunction App() {\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [meme, setMeme] = useState(null);\n\n  useEffect(() =>{\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(resp => resp.json())\n    .then(json => setTemplates(json.data.memes));\n  }, []);\n\n  const handleChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n\n    if (fieldName === \"top\") {\n      setTopText(fieldValue);\n    } else {\n      setBottomText(fieldValue);\n    }\n  }\n\n  const handleClick = imageId => {\n    setSelectedId(imageId)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const params = {\n      template_id: selectedId,\n      text0: topText,\n      text1: bottomText,\n      username: 'xzk03017',\n      password: 'xzk03017@cndps.com'\n    }\n    fetch(`https://api.imgflip.com/caption_image?${qs.stringify(params)}`)\n    .then(resp => resp.json())\n    .then(json => {\n      if (json.success) {\n        setMeme(json.data.url);\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          name=\"top\" \n          value={topText} \n          onChange={handleChange} \n        />\n        <input \n          type=\"text\" \n          name=\"bottom\" \n          value={bottomText} \n          onChange={handleChange} \n        />\n        <input type=\"submit\" value=\"Generate meme\" />\n      </form>\n      <div className=\"meme\">\n        {meme ? <img src={meme} alt=\"\" /> : null}\n      </div>\n      <div className=\"meme-container\">\n        {templates && \n          templates.map(elem => <img \n                                  key={elem.id}\n                                  id={elem.id} \n                                  onClick={() => handleClick(elem.id)} \n                                  src={elem.url} \n                                  alt=\"\"\n                                />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}